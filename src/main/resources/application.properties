spring.kafka.bootstrap-servers=192.168.10.33:9092,192.168.10.34:9092
#消费组ID
spring.kafka.consumer.group-id=dsz-group-8
#earliest表示当前消费组若有提交offset则消费offset之后的所有新消息，没有offset历史记录则从头开始消费所有的消息。
#latest表示当前消费组不管有没有历史offset,都将只消费从消费者程序起动后的新消息。注意这里如果一个全新消费组开始就指定latest那么前面所有的而历史数据offset都将被提交，后续你再换成earliest也还是不会去消费前面的历史消息。
spring.kafka.consumer.auto-offset-reset=earliest
#消费端每次最多从broker拉取最大的消息条数
#spring.kafka.consumer.max-poll-records=10

#自动提交频率单位：秒
#spring.kafka.consumer.auto-commit-interval=30
#是否开启自动提交功能，默认开启的
spring.kafka.consumer.enable-auto-commit=false
#消息序列化
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer


#设置并发消费
#spring.kafka.listener.concurrency=2